(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{285:function(n,a,e){"use strict";e.r(a);var s=e(14),t=Object(s.a)({},(function(){var n=this,a=n._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[a("p",[n._v("sass让人们受益的一个重要特性就是它为css引入了变量。你可以把反复使用的css属性值 定义成变量，然后通过变量名来引用它们，而无需重复书写这一属性值。")]),n._v(" "),a("h5",{attrs:{id:"_1、变量声明-【使用-符号】"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、变量声明-【使用-符号】"}},[n._v("#")]),n._v(" 1、变量声明;【使用$符号】")]),n._v(" "),a("p",[n._v("当变量定义在css规则块内，那么该变量只能在此规则块内使用。如果它们出现在任何形式的{...}块中（如@media或者@font-face块）中时，只能在块内生效。")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("$highlight-color: #F90;  //变量名使用中划线和下划线都行\n\n.login-wrap {\n  text-align: center;\n  font-size: 30px;\n  color:$highlight-color;\n  border:1px solid $highlight-color\n}\n")])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("$highlight-color: #F90;    //可以在login-wrap外的块中使用\n\n.login-wrap {\n  $width: 30px;\n  text-align: center;\n  font-size: $width;    //只能在login-wrap块中使用\n  color:$highlight-color;\n}\n")])])]),a("p",[n._v("变量对象")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("$theme-map:(\n  $color: red,\n  $width: 200px;\n);\n")])])]),a("p",[n._v("在scss中，对象都是放在 () 圆括号中的，而不是花括号{}中")]),n._v(" "),a("p",[n._v("!default，如果一个变量已经定义，当通过!default赋值时，不会起作用")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('$content: "First content";\n$content: "Second content?" !default;\n\n#main {\n  content: $content;\n}\n\n编译为\n#main {\n  content: "First content";  //还是第一个\n}\n')])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('$content: null;\n$content: "Non-null content" !default;\n\n#main {\n  content: $content;\n}\n\n编译为\n#main {\n  content: "Non-null content";   //定义的default值\n}\n')])])]),a("h5",{attrs:{id:"_2、css嵌套"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、css嵌套"}},[n._v("#")]),n._v(" 2、css嵌套")]),n._v(" "),a("p",[n._v("可以避免重复多次的写父选择器。将嵌套的选择器作为子选择器。")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v(".center{\n  .title{\n    font-size: 20px;\n    font-weight: bold;\n  }\n\n  input{\n    background-color: gray;\n  }\n}\n /* 编译后 */\n.center .title {\n   font-size: 20px;\n   font-weight: bold; \n}\n.center input { background-color: gray;}\n")])])]),a("p",[n._v("群组的嵌套")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("//子元素群组\n.container {\n  h1, h2, h3 {margin-bottom: 10px}\n}\n编译后\n.container h1, .container h2, .container h3 { margin-bottom: 10px }\n")])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("//父元素群组\nnav, aside {\n  a {color: blue}\n}\n编译后\nnav a, aside a {color: blue}\n")])])]),a("h5",{attrs:{id:"_3、父元素的引用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、父元素的引用"}},[n._v("#")]),n._v(" 3、父元素的引用")]),n._v(" "),a("p",[n._v("有时并不是让嵌套的作为子原则器，而是父选择器的补充，比如:hover,，此时必须使用 父元素的引用符 &, 此时&代表父元素")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v(".center{\n  input{\n    background-color: gray;\n  }\n\n  &:hover{ \n    color:red;\n  }\n}\n编译后\n.center input{background-color: gray;}\n.center:hover{color:red;}\n")])])]),a("h5",{attrs:{id:"_4、子组合和同胞选择器的使用-、-和"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4、子组合和同胞选择器的使用-、-和"}},[n._v("#")]),n._v(" 4、子组合和同胞选择器的使用 >、+ 和 ~ ;")]),n._v(" "),a("p",[n._v("可以把它们放在==外层选择器"),a("strong",[n._v("后边")]),n._v("==，或==里层选择器"),a("strong",[n._v("前边")]),n._v("==：")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("article {\n  ~ article { border-top: 1px dashed #ccc }  //里层选择器前面\n  > section { background: #eee }\n  dl > {    //外层选择器前面\n    dt { color: #333 }\n    dd { color: #555 }\n  }\n  nav + & { margin-top: 0 }\n}\n\n//编译后\narticle ~ article { border-top: 1px dashed #ccc }\narticle > footer { background: #eee }\narticle dl > dt { color: #333 }\narticle dl > dd { color: #555 }\nnav + article { margin-top: 0 }\n")])])]),a("h5",{attrs:{id:"_5、混合器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5、混合器"}},[n._v("#")]),n._v(" 5、混合器")]),n._v(" "),a("p",[n._v("通过变量我们可以对单个css值，定义定义和重用，如果对多个css值，都写变量，显得太麻烦，所以使用混合器一次性定义多个。")]),n._v(" "),a("p",[a("strong",[n._v("通过@mixin定义， 通过@include使用")])]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("@mixin rounded-corners {\n  -moz-border-radius: 50px;\n  -webkit-border-radius: 50px;\n  border-radius: 50px;\n}\n\n.center{\n  input{\n    background-color: gray;\n    @include rounded-corners;\n  }\n}\n编译后\n.center{\n  input{\n    background-color: gray;\n    -moz-border-radius: 50px;\n    -webkit-border-radius: 50px;\n    border-radius: 50px;\n  }\n}\n")])])]),a("p",[n._v("可以给混合器传参")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("@mixin rounded-corners($normal) {\n  -moz-border-radius: $normal;\n  -webkit-border-radius: $normal;\n  border-radius: $normal;\n}\n\n.center{\n  input{\n    background-color: gray;\n    @include rounded-corners(50%);\n  }\n}\n")])])]),a("p",[n._v("混合器默认参数")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("$normals: 2px;\n@mixin rounded-corners($normal:$normals) {\n  -moz-border-radius: $normal;\n  -webkit-border-radius: $normal;\n  border-radius: $normal;\n}\n\n.center{\n  input{\n    background-color: gray;\n    @include rounded-corners();\n  }\n}\n")])])]),a("p",[n._v("向混合样式中导入内容")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("$normals: 2px;\n@mixin rounded-corners($normal:$normals) {\n  -moz-border-radius: $normal;\n  -webkit-border-radius: $normal;\n  @content;\n}\n\n.center{\n  input{\n    background-color: gray;\n    @include rounded-corners(){\n       border-radius: $normal;\n    };\n  }\n}\n")])])]),a("p",[n._v("@include中的  border-radius: $normal; 会最后合并到 @mixin的@content中\n最后编译为")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v(".center{\n  input{\n    background-color: gray;\n    -moz-border-radius: $normal;\n    -webkit-border-radius: $normal;\n    border-radius: $normal;\n  }\n}\n")])])]),a("p",[n._v("利用混合器，可以很容易地在样式表的不同地方共享样式。如果你发现自己在不停地重复一段样式，那就应该把这段样式构造成优良的混合器，尤其是这段样式本身就是一个逻辑单元，比如说是一组放在一起有意义的属性。")]),n._v(" "),a("p",[n._v("判断一组属性是否应该组合成一个混合器，一条经验法则就是你能否为这个混合器想出一个好的名字。如果你能找到一个很好的短名字来描述这些属性修饰的样式，比如rounded-cornersfancy-font或者no-bullets，那么往往能够构造一个合适的混合器。如果你找不到，这时候构造一个混合器可能并不合适。")]),n._v(" "),a("h5",{attrs:{id:"_6、继承"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6、继承"}},[n._v("#")]),n._v(" 6、继承")]),n._v(" "),a("p",[n._v("变量是基于单个 css 属性的，mixin是基于多个css属性的，并且这两个都是同属一个css样式文件才生效")]),n._v(" "),a("p",[n._v("而继承是基于css类的，可以在不同的css文件间使用，既可以给自身的选择器用，也可以给继承的后代选择器用")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("//1.css\n@mixin rounded-corners($normal) {\n  -moz-border-radius: $normal;\n  -webkit-border-radius: $normal;\n  border-radius: $normal;\n}\n//或者通过其他地方将mixin导入进来\n\n.center{  //可用于class为center的元素\n  .title{\n    font-size: 20px;\n    font-weight: bold;\n  }\n  input{\n    background-color: gray;\n    @include rounded-corners(50%);   //使用混合器\n  }\n  &:hover{\n    color:red;\n  }\n}\n")])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("//2.css\n.password {\n  @extend .center;      //password继承样式表中任何 位置的 .center的样式。\n  box-shadow: 0 0 0 10px red inset;\n}\n")])])]),a("p",[n._v("不仅会继承.center自身的所有样式，任何跟.center有关的组合选择器样式也会被.password 以组合选择器的形式继承")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("//不要使用后代选择器去继承\n.password .text{   //不推荐\n  @extend .center;\n}\n")])])]),a("p",[n._v("extend-Only 选择器，或者占位符选择器%，和id、class选择器类似，只是 必须通过 @extend 指令调用【将原来的“ . ”使用“ % ”定义，只用于继承，不会给某个元素用】")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("%center{  //只用于@extend的使用，不会给class为center的元素用，况且此时也不是class样式了\n  input{\n    background-color: gray;\n    @include rounded-corners(50%);\n  }\n  &:hover{\n    color:red;\n  }\n}\n.password {\n  @extend %center;\n  box-shadow: 0 0 0 10px red inset;\n}\n")])])]),a("p",[n._v("如果两个 样式之间有 从属、深浅等 基于某一个大类的，则使用继承最好")]),n._v(" "),a("p",[n._v("否则，如果两个样式之间，没有任何关联，直接简单的拼接，则使用mixins比较好")]),n._v(" "),a("h5",{attrs:{id:"_7、函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7、函数"}},[n._v("#")]),n._v(" 7、函数")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("p {\n  color: hsl(0, 100%, 50%);\n}\n//编译为\np {\n  color: #ff0000; \n}\n//注意如果在css中，hsl不会编译，而是直接输出，是否显示颜色，取决于浏览器是否支持hsl\n")])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('//map-get函数，表示从一个对象中，根据key，获取对应的value\n.password {\n  color: map-get((color:red), "color");\n}\n')])])]),a("p",[n._v("scss允许你自定义函数，使用@function定义函数名，使用@return返回值")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("$grid-width: 40px;\n@function grid-width($n) {\n  @return $n * $grid-width;\n}\n\n#sidebar { width: grid-width(5); }\n\n编译为\n#sidebar {\n  width: 200px; \n}\n")])])]),a("h5",{attrs:{id:"_8、导入sass文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8、导入sass文件"}},[n._v("#")]),n._v(" 8、导入SASS文件")]),n._v(" "),a("p",[n._v("在css中@import允许在一个css文件中导入其他css文件。然而，只有执行到@import时，浏览器才会去下载其他css文件，这导致页面加载起来特别慢。")]),n._v(" "),a("p",[n._v("而sass的@import，在生成css文件时就把相关文件导入进来。这意味着在使用css样式之前，所有相关的样式被归纳到了同一个css文件中，而无需发起额外的下载请求。")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('@import "mixins.scss   //导入mixins.scss\n@import "mixins"    //导入mixins.scss,可以省略 后缀\n\n@import "mixins.css"  //被解析为导入css\n@import url("mixins")  //被解析为导入css\n')])])]),a("p",[n._v("一般情况下，你反复声明一个变量，只有最后一处声明有效且它会覆盖前边的值。")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("$link-color: blue;\n$link-color: red;\na {\n  color: $link-color;   //值为red\n}\n")])])]),a("p",[n._v("同理, 如果在 variable.scss中有个变量$link-color: red;那么在导入文件后，重新声明会覆盖掉。")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('@import "variable"\n$link-color: red;\na {\n  color: $link-color;   //值为red\n}\n')])])]),a("p",[n._v("利用此特性，可以在你的样式表中对导入的样式稍作修改。")]),n._v(" "),a("h5",{attrs:{id:"_9、注释"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9、注释"}},[n._v("#")]),n._v(" 9、注释")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("body {\n  color: #333; // 这种注释内容不会出现在生成的css文件中\n  padding: 0; /* 这种注释内容会出现在生成的css文件中 */\n}\n")])])]),a("p",[n._v("在普通的css中，注释都是/**/")]),n._v(" "),a("p",[n._v('而在scss中提供的//注释，称为"静默注释"，即不会出现的最终编译的css文件中。')]),n._v(" "),a("h5",{attrs:{id:"_10、数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_10、数据类型"}},[n._v("#")]),n._v(" 10、数据类型")]),n._v(" "),a("p",[n._v("Sass 支持 6 种主要的数据类型：")]),n._v(" "),a("ul",[a("li",[n._v("数字，1, 2, 13, 10px")]),n._v(" "),a("li",[n._v("字符串，有引号字符串与无引号字符串，\"foo\", 'bar', baz")]),n._v(" "),a("li",[n._v("颜色，blue, #04a3f9, rgba(255,0,0,0.5)")]),n._v(" "),a("li",[n._v("布尔型，true, false")]),n._v(" "),a("li",[n._v("空值，null")]),n._v(" "),a("li",[n._v("数组 (list)，用空格或逗号作分隔符，1.5em 1em 0 2em, Helvetica, Arial, sans-serif")]),n._v(" "),a("li",[n._v("maps, 相当于 JavaScript 的 object，(key1: value1, key2: value2)")])]),n._v(" "),a("h5",{attrs:{id:"_11、插值语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_11、插值语句"}},[n._v("#")]),n._v(" 11、插值语句#{}")]),n._v(" "),a("p",[n._v("一般情况下，直接使用运算符就可以，但是如果只是为了将结果显示，而不是计算，那么就需要#{}")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("$name: foo;\n$attr: border;\np.#{$name} {\n  #{$attr}-color: blue;\n}\n\n编译为\np.foo {\n  border-color: blue; \n}\n")])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v(".title {\n  $min-size: 2px\n  font-size: 18px / $min-size;\n}\n编译为\n.title {\n  font-size: 9;\n}\n")])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v(".title {\n  $min-size: 2px\n  font-size: 18px / #{ $min-size };\n}\n编译为\n.title {\n  font-size: 18px / 2px;\n}\n")])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v(".title {\n  $slidebar-width: 20px;\n  width: calc(50px - $slidebar-width);\n}\n编译为\n.title {\n  width: calc(50px - $slidebar-width);  //非法，不起作用\n}\n因为calc中整体是个字符串，scss只会做 字符串的拼接，等拼接后，编译成css，再通过浏览器去计算，scss本身不会去计算。\n")])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v(".title {\n  $slidebar-width: 20px;\n  width: calc(50px - #{$slidebar-width});\n}\n编译为\n.title {\n  width: calc(50px - 20px);\n}\n")])])]),a("h5",{attrs:{id:"_12、运算"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_12、运算"}},[n._v("#")]),n._v(" 12、运算")]),n._v(" "),a("p",[n._v("在+ - *  / 运算中，有时不想进行计算，只是为了显示，那么采用#{} 将值包裹")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("//加法\np {\n  font-size: 18px+2px;\n}\n编译为\np {\n  font-size: 20px;\n}\n\n//直接显示\np {\n  font-size: #{18px} + #{2px};\n}\n编译为\np {\n  font-size: 18px + 2px;\n}\n")])])]),a("p",[n._v("字符串连接")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("p {\n  cursor: e + -resize;\n}\n编译为\np {\n  cursor: e-resize; \n}\n")])])]),a("h5",{attrs:{id:"_13、-deep"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_13、-deep"}},[n._v("#")]),n._v(" 13、/deep/")]),n._v(" "),a("p",[n._v("在vue中，如果要修改 组件的内部样式，必须穿透去修改，即在scss中使用/deep/， 当然如果是css，则直接使用 >>> 即可")]),n._v(" "),a("p",[n._v("可以用来穿透去修改 插件的样式。而且如果父类使用了/deep/，子类不能再用/deep/，否则样式不会生效。 因为父类使用/deep/ 后，所有子类都被穿透了")]),n._v(" "),a("h5",{attrs:{id:"_14、控制指令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_14、控制指令"}},[n._v("#")]),n._v(" 14、控制指令")]),n._v(" "),a("p",[n._v("@if")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("$type: monster;\np {\n  @if $type == ocean {\n    color: blue;\n  } @else if $type == matador {\n    color: red;\n  } @else if $type == monster {\n    color: green;\n  } @else {\n    color: black;\n  }\n}\n\n编译为\np {\n  color: green; \n}\n")])])]),a("p",[n._v("@for\n@each\n@while")])])}),[],!1,null,null,null);a.default=t.exports}}]);